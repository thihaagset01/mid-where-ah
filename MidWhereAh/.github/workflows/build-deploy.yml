name: Build and Deploy MidWhereAh

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'MidWhereAh/package-lock.json'

      - name: Install dependencies
        working-directory: ./MidWhereAh
        run: npm ci

      - name: Run linting
        working-directory: ./MidWhereAh
        run: npm run lint

      - name: Run tests
        working-directory: ./MidWhereAh
        run: npm run test:coverage

      - name: Run accessibility tests
        working-directory: ./MidWhereAh
        run: npm run test:accessibility

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./MidWhereAh/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'MidWhereAh/package-lock.json'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        working-directory: ./MidWhereAh
        run: npm ci

      - name: Build preview
        working-directory: ./MidWhereAh
        run: eas build --profile preview --platform all --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'MidWhereAh/package-lock.json'

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        working-directory: ./MidWhereAh
        run: npm ci

      - name: Build production
        working-directory: ./MidWhereAh
        run: eas build --profile production --platform all --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          ONEMAP_API_KEY: ${{ secrets.ONEMAP_API_KEY }}

  submit:
    name: Submit to App Stores
    runs-on: ubuntu-latest
    needs: build-production
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[release]')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to iOS App Store
        working-directory: ./MidWhereAh
        run: eas submit --platform ios --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
          EXPO_ASC_APP_ID: ${{ secrets.EXPO_ASC_APP_ID }}

      - name: Submit to Google Play Store
        working-directory: ./MidWhereAh
        run: eas submit --platform android --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}